# Generated by Django 5.2 on 2025-08-19 20:50

import authentication.models
import django.core.serializers.json
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('name', models.CharField(blank=True, help_text="User's full name", max_length=150, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='name')),
                ('customer_id', models.CharField(blank=True, help_text='Customer id', max_length=150, null=True, unique=True, verbose_name='customer id')),
                ('email', models.EmailField(blank=True, help_text="User's email", max_length=254, unique=True, verbose_name='email')),
                ('email_verified', models.DateTimeField(blank=True, help_text='When user got verified.', null=True, verbose_name='email verified')),
                ('password', models.CharField(blank=True, help_text="User's password", max_length=128, null=True, validators=[django.core.validators.MinLengthValidator(8)], verbose_name='password')),
                ('source', models.CharField(blank=True, max_length=150, null=True, verbose_name='source')),
                ('signature', models.CharField(blank=True, help_text="User's signature", max_length=250, null=True, verbose_name='signature')),
                ('last_signed_in', models.DateTimeField(auto_now_add=True, verbose_name='last signed in')),
                ('roles', models.JSONField(default=authentication.models.User.get_default_roles, encoder=django.core.serializers.json.DjangoJSONEncoder, verbose_name='roles')),
                ('identity_provider', models.CharField(blank=True, choices=[('DOCUMENSO', 'Documenso'), ('GOOGLE', 'Google'), ('OIDC', 'OIDC')], default='DOCUMENSO', verbose_name='identity provider')),
                ('disabled', models.BooleanField(blank=True, default=False, verbose_name='disabled')),
                ('url', models.CharField(blank=True, help_text="User's public profile URL", max_length=150, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(1)], verbose_name='URL')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='id')),
                ('session_token', models.CharField(blank=True, help_text='Token that stored on the client (e.g. cookie, header)', max_length=255, unique=True, verbose_name='session token')),
                ('expires_at', models.DateTimeField(blank=True, verbose_name='expires at')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='sessions', related_query_name='session', to='authentication.user', verbose_name='user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserSecurityAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('ACCOUNT_PROFILE_UPDATE', 'Account Profile Update'), ('ACCOUNT_SSO_LINK', 'Account SSO Link'), ('AUTH_2FA_DISABLE', 'Auth 2FA Disable'), ('AUTH_2FA_ENABLE', 'Auth 2FA Enable'), ('PASSKEY_CREATED', 'PassKey Created'), ('PASSKEY_UPDATED', 'PassKey Updated'), ('PASSKEY_DELETED', 'PassKey Deleted'), ('PASSWORD_RESET', 'Password Reset'), ('PASSWORD_UPDATE', 'Password Update'), ('SIGN_IN', 'Sign In'), ('SIGN_OUT', 'Sign Out'), ('SIGN_IN_FAIL', 'Sign In '), ('SIGN_IN_2FA_FAIL', '2FA Sign In Failed '), ('SIGN_IN_PASSKE_FAIL', 'PASSKEY Sign In Failed ')], max_length=25, verbose_name='type')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('user_agent', models.TextField(blank=True, verbose_name='user agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='security_audit_logs', related_query_name='security_audit_log', to='authentication.user')),
            ],
            options={
                'verbose_name': 'user security audit log',
                'verbose_name_plural': 'user security audit logs',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='VerificationToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secondary_id', models.UUIDField(blank=True, default=uuid.uuid4, help_text='Extra unique ID', unique=True, verbose_name='secondary id')),
                ('identifier', models.CharField(blank=True, choices=[('confirmation-email', 'Confirmation Email'), ('PASSKEY_CHALLENGE', 'PASSKEY_CHALLENGE')], help_text='Purpose or the target of token.', max_length=255, validators=[django.core.validators.MinLengthValidator(3)], verbose_name='identifier')),
                ('token', models.TextField(blank=True, help_text='Actual token', unique=True, verbose_name='token')),
                ('completed', models.BooleanField(blank=True, default=False, help_text='Specify whether token is used or not yet.', verbose_name='completed')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Specify when token gets expired', verbose_name='expires at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='verification_tokens', related_query_name='verification_token', to='authentication.user', verbose_name='user')),
            ],
            options={
                'verbose_name': 'verification token',
                'verbose_name_plural': 'verification tokens',
                'ordering': ('-created_at',),
            },
        ),
    ]
